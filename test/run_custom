#!/bin/bash

mytmpdir=`mktemp -d 2>/dev/null || mktemp -d -t 'mytmpdir'`
cid_file="${mytmpdir}/cid_file"

if [ -z "${TEST_DIR}" ]; then
  TEST_DIR="$(readlink -zf $(dirname "${BASH_SOURCE[0]}"))"
fi

# TODO: This should be part of the image metadata
test_port=9000

image_exists() {
  echo "Inspecting image $1"
  docker inspect $1 &>/dev/null
}

container_exists() {
  image_exists $(cat $cid_file)
}

container_ip() {
  docker inspect -f '{{ .NetworkSettings.IPAddress }}' $(cat $cid_file)
}

run_test_application() {
  docker run --rm --cidfile=${cid_file} -p ${test_port} ${IMAGE_NAME}-test-app
}

cleanup() {
  if [ -f $cid_file ]; then
    if container_exists; then
      docker stop $(cat $cid_file)
    fi
  fi
  if image_exists ${IMAGE_NAME}-test-app; then
    docker rmi ${IMAGE_NAME}-test-app
  fi
  rm -rf ${TEST_DIR}/test-app/.git
}

check_result() {
  local result="$1"
  if [[ "$result" != "0" ]]; then
    echo "Builder image '${IMAGE_NAME}' test FAILED (exit code: ${result})"
    cleanup
    exit $result
  fi
}

run_custom_build() {
	docker run -it -v /var/run/docker.sock:/var/run/docker.sock \
		-e "SOURCE_URI=https://github.com/pat2man/play-originv3-test.git" \
		-e "SOURCE_REF=master" \
    -e "TAG="${IMAGE_NAME}-test-app 
		 ${IMAGE_NAME}
}

wait_for_cid() {
  local max_attempts=10
  local sleep_time=1
  local attempt=1
  local result=1
  while [ $attempt -le $max_attempts ]; do
    [ -f $cid_file ] && break
    echo "Waiting for container start..."
    attempt=$(( $attempt + 1 ))
    sleep $sleep_time
  done
}

test_connection() {
  echo "Testing HTTP connection..."
  local max_attempts=10
  local sleep_time=6
  local attempt=1
  local result=1
  while [ $attempt -le $max_attempts ]; do
    echo "Sending GET request to http://$(container_ip):${test_port}/"
    response_code=$(curl -s -w %{http_code} -o /dev/null http://$(container_ip):${test_port}/)
    status=$?
    if [ $status -eq 0 ]; then
      if [ $response_code -eq 200 ]; then
        result=0
      fi
      break
    fi
    attempt=$(( $attempt + 1 ))
    sleep $sleep_time
  done
  return $result
}

# Build the application image twice to ensure the 'save-artifacts' and
# 'restore-artifacts' scripts are working properly
run_custom_build
check_result $?

# Verify that the HTTP connection can be established to test application container
run_test_application &

# Wait for the container to write it's CID file
wait_for_cid

test_connection
check_result $?

cleanup